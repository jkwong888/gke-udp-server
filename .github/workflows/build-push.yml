name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
    paths-ignore:
      - 'manifests/**'
  # run it during pull request
  pull_request:

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    permissions:
      contents: 'read'
      id-token: 'write'

    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: projects/801352177098/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions
          service_account: github-actions@jkwng-gitlab.iam.gserviceaccount.com
          token_format: 'access_token' # <--

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # This example uses the docker login action
      - uses: 'docker/login-action@v1'
        with:
          registry: 'gcr.io' # or REGION-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: set up yq
        uses: chrisdickinson/setup-yq@latest

      - id: docker_build
        name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
            gcr.io/jkwng-images/udp-server:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      - name: yq
        shell: bash
        run: |
          yq w -i manifests/kustomization.yaml 'images(name==udp-server).newTag' ${{ steps.docker_build.outputs.digest }}
          cat manifests/kustomization.yaml